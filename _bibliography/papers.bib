---
---

@inproceedings{zhang2022distributed,
  abbr={UAI'22},
  selected={true},
  bibtex_show={true},
  code= {https://github.com/dat-2022/dat},
  poster={https://drive.google.com/file/d/1rzkyUZP4G3iZ_jl_I7fK_VkuJarKvZZC/view?usp=sharing},
  slides={https://drive.google.com/file/d/1Wik6uG1-fV93W77-Kb-wtibOLJQffRTk/view?usp=sharing},
  html={https://arxiv.org/abs/2206.06257},
  title={Distributed Adversarial Training to Robustify Deep Neural Networks at Scale},
  author={Zhang*, Gaoyuan and Lu*, Songtao and Zhang, Yihua and Chen, Xiangyi and Chen, Pin-Yu and Fan, Quanfu and Martie, Lee and Horesh, Lior and Hong, Mingyi and Liu, Sijia},
  booktitle={Uncertainty in Artificial Intelligence},
  year={2022},
  abstract={Current deep neural networks (DNNs) are vulnerable to adversarial attacks, where adversarial perturbations to the inputs can change or manipulate classification. To defend against such attacks, an effective and popular approach, known as adversarial training (AT), has been shown to mitigate the negative impact of adversarial attacks by virtue of a min-max robust training method. While effective, it remains unclear whether it can successfully be adapted to the distributed learning context. The power of distributed optimization over multiple machines enables us to scale up robust training over large models and datasets. Spurred by that, we propose distributed adversarial training (DAT), a large-batch adversarial training framework implemented over multiple machines. We show that DAT is general, which supports training over labeled and unlabeled data, multiple types of attack generation methods, and gradient compression operations favored for distributed optimization. Theoretically, we provide, under standard conditions in the optimization theory, the convergence rate of DAT to the first-order stationary points in general non-convex settings. Empirically, we demonstrate that DAT either matches or outperforms state-of-the-art robust accuracies and achieves a graceful training speedup (e.g., on ResNet-50 under ImageNet).}
}


@InProceedings{zhang2022revisiting,
  abbr={ICML'22},
  selected={true},
  bibtex_show={true},
  code= {https://github.com/OPTML-Group/Fast-BAT},
  poster={https://drive.google.com/file/d/1hPXqvVt-nXymYK8Rc3bk-mFYmVbEEard/view?usp=sharing},
  slides={https://drive.google.com/file/d/13uI2Uzl_yLNdx2o1QqjGiQWFmL8RLaCn/view?usp=sharing},
  html={https://proceedings.mlr.press/v162/zhang22ak/zhang22ak.pdf},
  title =    {Revisiting and Advancing Fast Adversarial Training Through The Lens of Bi-Level Optimization},
  author =       {Zhang*, Yihua and Zhang*, Guanhua and Khanduri, Prashant and Hong, Mingyi and Chang, Shiyu and Liu, Sijia},
  booktitle =    {Proceedings of the 39th International Conference on Machine Learning},
  pages =    {26693--26712},
  year =   {2022},
  publisher =    {PMLR},
  abstract =   {Adversarial training (AT) is a widely recognized defense mechanism to gain the robustness of deep neural networks against adversarial attacks. It is built on min-max optimization (MMO), where the minimizer (i.e., defender) seeks a robust model to minimize the worst-case training loss in the presence of adversarial examples crafted by the maximizer (i.e., attacker). However, the conventional MMO method makes AT hard to scale. Thus, Fast-AT and other recent algorithms attempt to simplify MMO by replacing its maximization step with the single gradient sign-based attack generation step. Although easy to implement, FAST-AT lacks theoretical guarantees, and its empirical performance is unsatisfactory due to the issue of robust catastrophic overfitting when training with strong adversaries. In this paper, we advance Fast-AT from the fresh perspective of bi-level optimization (BLO). We first show that the commonly-used Fast-AT is equivalent to using a stochastic gradient algorithm to solve a linearized BLO problem involving a sign operation. However, the discrete nature of the sign operation makes it difficult to understand the algorithm performance. Inspired by BLO, we design and analyze a new set of robust training algorithms termed Fast Bi-level AT (Fast-BAT), which effectively defends sign-based projected gradient descent (PGD) attacks without using any gradient sign method or explicit robust regularization. In practice, we show that our method yields substantial robustness improvements over multiple baselines across multiple models and datasets.}
}


@inproceedings{chen2022quarantine,
  abbr={CVPR'22},
  selected={true},
  bibtex_show={true},
  code= {https://github.com/VITA-Group/Backdoor-LTH},
  poster={https://drive.google.com/file/d/1VnnC06NBoRCfSjw2RT91dKCeZ8iDEXCY/view?usp=sharing},
  html={https://arxiv.org/pdf/2205.11819.pdf},
  title={Quarantine: Sparsity Can Uncover the Trojan Attack Trigger for Free},
  author={Chen*, Tianlong and Zhang*, Zhenyu and Zhang*, Yihua and Chang, Shiyu and Liu, Sijia and Wang, Zhangyang},
  booktitle={Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition},
  pages={598--609},
  year={2022},
  abstract={Trojan attacks threaten deep neural networks (DNNs) by poisoning them to behave normally on most samples, yet to produce manipulated results for inputs attached with a particular trigger. Several works attempt to detect whether a given DNN has been injected with a specific trigger during the training. In a parallel line of research, the lottery ticket hypothesis reveals the existence of sparse subnetworks which are capable of reaching competitive performance as the dense network after independent training. Connecting these two dots, we investigate the problem of Trojan DNN detection from the brand new lens of sparsity, even when no clean training data is available. Our crucial observation is that the Trojan features are significantly more stable to network pruning than benign features. Leveraging that, we propose a novel Trojan network detection regime: first locating a "winning Trojan lottery ticket" which preserves nearly full Trojan information yet only chance-level performance on clean inputs; then recovering the trigger embedded in this already isolated subnetwork. Extensive experiments on various datasets, i.e., CIFAR-10, CIFAR-100, and ImageNet, with different network architectures, i.e., VGG-16, ResNet-18, ResNet-20s, and DenseNet-100 demonstrate the effectiveness of our proposal.}
}
